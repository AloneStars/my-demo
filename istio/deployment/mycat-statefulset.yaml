kind: Service
apiVersion: v1
metadata:
  name: mycat-demo
spec:
  type: NodePort          # Expose service port to host machine
  ports:
  - name: mysql-data      # Data port in Mycat
    port: 8066
    targetPort: 8066
    nodePort: 30066       # Expose service port to host machine
  - name: mysql-mnt       # Management port in Mycat
    port: 9066
    targetPort: 9066
    nodePort: 30067
  selector:
    app: mycat-demo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mycat-demo
spec:
  replicas: 1
  serviceName: mycat-demo
  selector:
    matchLabels:
      app: mycat-demo
  template:
    metadata:
      labels:
        app: mycat-demo
        version: 1.6.7.3
    spec:
      containers:
      - name: mycat-demo
        image: mydemo/mycat:1.6.7.3
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_HOST
          value: "db-demo.default.svc.cluster.local"
        ports:
        - containerPort: 8066
        - containerPort: 9066
        readinessProbe: # Check whether Mycat is ready
          #tcpSocket:    # Wait until TCP port is opened
          #  port: 8066
          exec: # Use exec command to avoid connecting to 8066
            command: ["sh", "-c", "COUNT=`netstat -antp tcp | grep 8066 | grep LISTEN -c`; if [ $COUNT -eq 1 ]; then exit 0; else exit 1; fi"]
          initialDelaySeconds: 5    # Wait initialDelaySeconds to check the first time
          periodSeconds: 5          # Wait periodSeconds to check next time
          timeoutSeconds: 2         # Timeout for check process
#      initContainers:
#      - name: wait-deps
#        image: busybox
#        imagePullPolicy: IfNotPresent
        # 1. Wait PODs of dependencies to be READY.
        # 2. Wait services of dependencies to be READY, including service DNS being available.
#        command: ['sh', '-c', 'until nslookup db-demo; do sleep 3; done;']