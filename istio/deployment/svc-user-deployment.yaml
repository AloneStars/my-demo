apiVersion: apps/v1
kind: Deployment
metadata:
  name: svc-user
spec:
  replicas: 2
  selector:
    matchLabels:
      app: svc-user
  template:
    metadata:
      labels:
        app: svc-user
        version: latest
    spec:
      containers:
      - name: svc-user
        image: mydemo/user
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_HOST
          value: "mycat-demo.default.svc.cluster.local"
        - name: NACOS_HOST
          value: "pub-nacos.default.svc.cluster.local"
        - name: ZIPKIN_HOST
          value: "pub-zipkin.default.svc.cluster.local"
        - name: SERVICE_HOST # Use POD IP to register Dubbo service
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_PORT
          value: "20880"
        ports:
        - containerPort: 20880
        readinessProbe:  # Check whether User Service is ready
          #tcpSocket:    # Wait until TCP port is opened
          #  port: 20880
          # tcpSocket probe will connect and disconnect to 20880 periodically, 
          # cause massive Dubbo logs: "[DUBBO] disconnected from /10.1.0.1:33994 ..."
          exec:
            command: ["sh", "-c", "COUNT=`netstat -antp tcp|grep 20880|grep LISTEN -c`; if [ $COUNT -eq 1 ]; then exit 0; else exit 1; fi"]
          initialDelaySeconds: 3    # Wait initialDelaySeconds to check the first time
          periodSeconds: 5          # Wait periodSeconds to check next time
          timeoutSeconds: 1         # Timeout for check process
#      initContainers:
#      - name: wait-deps
#        image: busybox
#        imagePullPolicy: IfNotPresent
        # 1. Wait PODs of dependencies to be READY.
        # 2. Wait services of dependencies to be READY, including service DNS being available.
#        command: ['sh', '-c', 'until nslookup pub-nacos; do sleep 3; done; until nslookup mycat-demo; do sleep 3; done;']
