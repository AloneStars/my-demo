kind: Service
apiVersion: v1
metadata:
  name: mycat-mydemo
spec:
  type: NodePort            # Expose service port to host machine
  ports:
  - name: data-port       # Data port in Mycat
    port: 8066
    targetPort: 8066
    nodePort: 30066       # Expose service port to host machine
  - name: management-port # Management port in Mycat
    port: 9066
    targetPort: 9066
    nodePort: 30067
  selector:
    svc: mycat-mydemo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mycat-mydemo
spec:
  replicas: 1
  serviceName: mycat-mydemo
  selector:
    matchLabels:
      svc: mycat-mydemo
  template:
    metadata:
      labels:
        tier: middleware
        scope: mydemo
        svc: mycat-mydemo
    spec:
      containers:
      - name: mycat-mydemo
        image: mydemo/mycat:1.6.7.3
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_HOST
          value: "db-mydemo"
        ports:
        - containerPort: 8066
        - containerPort: 9066
        readinessProbe: # Check whether Mycat is ready
          #tcpSocket:    # Wait until TCP port is opened
          #  port: 8066
          # 避免连接8066端口
          exec:
            command: ["sh", "-c", "COUNT=`netstat -antp tcp | grep 8066 | grep LISTEN -c`; if [ $COUNT -eq 1 ]; then exit 0; else exit 1; fi"]
          initialDelaySeconds: 3    # Wait initialDelaySeconds to check the first time
          periodSeconds: 5          # Wait periodSeconds to check next time
          timeoutSeconds: 2         # Timeout for check process
      initContainers:
      - name: wait-deps
        image: busybox
        imagePullPolicy: IfNotPresent
        # nslookup success until db-mydemo is ready
        # 等待时间可能会比较长：
        # 1. 需要等待依赖项的容器启动，POD进入就绪状态；
        # 2. 需要等待依赖项服务在K8S集群内生效，包括DNS解析在本容器中生效；
        command: ['sh', '-c', 'until nslookup db-mydemo; do echo "Waiting for db-mydemo"; sleep 3; done; while : do COUNT=`nc -zv db-mydemo 3306|grep open -c`; if [ $COUNT -eq 1 ]; then break; else echo "Waiting MySQL"; sleep 3; fi; done;']